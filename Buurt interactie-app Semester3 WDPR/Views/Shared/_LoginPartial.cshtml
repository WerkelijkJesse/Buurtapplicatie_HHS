@using Microsoft.AspNetCore.Identity
@using Buurt_interactie_app_Semester3_WDPR.Areas.Identity.Data
@inject SignInManager<BuurtAppUser> SignInManager
@inject UserManager<BuurtAppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)! 
         </a>
    </li>
    <li class="nav-item">
        @{
            var roles = await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User));
            foreach (var role in roles)
            {
                <button type="button" class="btn text-dark">@role</button>
            }
        }
    </li>

<li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
